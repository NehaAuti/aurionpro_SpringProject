package com.aurionpro.mappings.service;

import org.springframework.stereotype.Service;

import com.aurionpro.mappings.entity.Captcha;
import com.aurionpro.mappings.repository.CaptchaRepository;

import java.time.LocalDateTime;
import java.util.Random;

@Service
public class CaptchaService {

    private final CaptchaRepository captchaRepository;

    public CaptchaService(CaptchaRepository captchaRepository) {
        this.captchaRepository = captchaRepository;
    }

    public void storeCaptcha(String captchaId, String inputCaptcha) {
        Captcha captcha = new Captcha();
        captcha.setCaptchaId(captchaId);
        captcha.setInputCaptcha(inputCaptcha);
        captcha.setCreatedAt(LocalDateTime.now());
        captchaRepository.save(captcha);
    }
    
    public boolean validateCaptcha(String captchaId, String inputCaptcha) {
        Captcha captcha = captchaRepository.findByCaptchaId(captchaId);
        if (captcha != null && captcha.getInputCaptcha().equals(inputCaptcha)) {
            // Optionally, you might want to remove the CAPTCHA after validation to prevent reuse
            captchaRepository.delete(captcha);
            return true;
        }
        return false;
    }


    public Captcha getCaptcha(String captchaId) {
        return captchaRepository.findByCaptchaId(captchaId);
    }

    public void removeCaptcha(String captchaId) {
        Captcha captcha = captchaRepository.findByCaptchaId(captchaId);
        if (captcha != null) {
            captchaRepository.delete(captcha);
        }
    }
}